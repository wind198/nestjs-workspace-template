// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ROOT_ADMIN
}

enum TempKeyType {
  ACTIVATE_ACCOUNT
  RESET_PASSWORD
}

model User {
  id                         Int           @id @default(autoincrement())
  createdAt                  DateTime      @default(now())
  updatedAt                  DateTime      @updatedAt
  email                      String
  passwordHash               String
  firstName                  String?
  lastName                   String?
  role                       UserRole
  TempKey                    TempKey[]
  isActive                   Boolean       @default(false)
  lastResetPasswordRequestAt DateTime?
  lastActivationEmailSentAt  DateTime?
  UserSession                UserSession[]
}

model TempKey {
  id        String      @id @default(uuid())
  token     String      @unique
  createdAt DateTime    @default(now())
  expiresAt DateTime
  type      TempKeyType
  userId    Int?
  user      User?       @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserSession {
  key         String    @id @default(uuid())
  userId      Int
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  expiresAt   DateTime
  loggedOutAt DateTime?
  revokedAt   DateTime?
  ipAddress   String?
  userAgent   String?
}
